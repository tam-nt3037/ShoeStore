
@{
    ViewBag.Title = "EditProducts";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

@model Week02.Models.ProductModel

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header card-header-icon" data-background-color="purple">
                        <i class="material-icons">assignment</i>
                    </div>
                    @using (Html.BeginForm("CreateProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="card-content">
                            <h4 class="card-title">Products</h4>
                            <div class="toolbar">
                                <!--        Here you can write extra buttons/actions for the toolbar              -->
                            </div>

                            <div class="form-horizontal">
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                @if (Model == null)
                                {
                                    <h2>Load this page again</h2>
                                }
                                else
                                {
                                    if (ViewBag.Message != null)
                                    {
                                        <div class="alert alert-rose alert-with-icon" data-notify="container">
                                            <i class="material-icons" data-notify="icon">notifications</i>
                                            <button type="button" aria-hidden="true" class="close">
                                                <i class="material-icons">close</i>
                                            </button>
                                            <span data-notify="message">@ViewBag.Message</span>
                                        </div>
                                    } else
                                    {

                                    }


                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Ten_sp, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(m => m.Ten_sp, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Ten_sp, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Hinh_sp, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @*@Html.EditorFor(m => m.Hinh_sp, new { htmlAttributes = new { @class = "form-control" } })*@
                                            <div class="fileinput fileinput-new text-center" data-provides="fileinput">
                                                <div class="fileinput-new thumbnail">
                                                    <img src="../../assets/img/image_placeholder.jpg" alt="...">
                                                </div>
                                                <div class="fileinput-preview fileinput-exists thumbnail"></div>
                                                <div>
                                                    <span class="btn btn-rose btn-round btn-file">
                                                        <span class="fileinput-new">Select image</span>
                                                        <span class="fileinput-exists">Change</span>
                                                        <input type="file" name="upload" id="upload" />
                                                    </span>
                                                    <a href="#pablo" class="btn btn-danger btn-round fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times"></i> Remove</a>
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Hinh_sp, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ID_nhom, "Group Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @*@Html.EditorFor(m => m.ID_nhom, new { htmlAttributes = new { @class = "form-control"} })*@
                                            @Html.DropDownListFor(m => m.ID_nhom, new SelectList(Model.ProductGroup, "ID_nhom", "Ten_nhom"), htmlAttributes: new { @class = "form-control selectpicker" })
                                            @Html.ValidationMessageFor(m => m.ID_nhom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Nsx_sp, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @*@Html.EditorFor(m => m.Nsx_sp, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.DropDownListFor(m => m.Nsx_sp, new SelectList(Model.Brands, "Ten_nhanhieu", "Ten_nhanhieu"), htmlAttributes: new { @class = "form-control selectpicker" })
                                            @Html.ValidationMessageFor(m => m.Nsx_sp, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.So_luong, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(m => m.So_luong, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.So_luong, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Gia_sp, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(m => m.Gia_sp, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Gia_sp, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Mo_ta, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(m => m.Mo_ta, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Mo_ta, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }



                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" runnat="server" />
                                        <input type="reset" value="Reset" class="btn btn-default" runnat="server" />
                                    </div>
                                </div>
                            </div>


                            <div>
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                    }
                    <!-- end content-->
                </div>
                <!--  end card  -->
            </div>
            <!-- end col-md-12 -->
        </div>
        <!-- end row -->
    </div>
</div>


